+ New feature
* Fixed/improved feature
- Removed feature

30. April 2014 v3.0.5
* Rewrote premium login to use api.audioaddict.com - Fixes recent premium login issues
  Thanks to Vidar Waagb√∏ for this fix


2. February 2014 v3.0.4
* Regex getting user config was too greedy


8. January 2014 v3.0.3
* Fixed parsing of Favorites playlist


3. January 2014 v3.0.2
* Fixed file pathing for the config file as well - DOH!


1. January 2014 v3.0.1
* Cache file pathing on OSes not using *UNIX syntax (Windows)


31. December 2013 v3.0.0
+ Rewrote whole plugin
+ Threading of playlists parsing to speed up first run and refreshing of playlists - 8 threads
* Now fully support the new sky.fm design
* Change it so expiration of cache is calculate in days not minutes - default is 7 days
- Check-in with stats are gone for now


8. December 2012 v2.1.0
+ Added a 4th stream quality option for Premium members: 256k/sec MP3
+ Now using the config.ini file to hopefully streamline the process of updating the di.fm/sky.fm/jazzradio.com plugins
* Fixed it so UTF8 chars is handled correctly in channelnames
* Fixed an "miscalculation" that made it so when using favorites, the playlist being activated when clicking the channelname,
  was actually the one belonging to the next channelname, etc.


2. October 2012 v2.0.0
+ Added Premium support
+ Added favorites support
+ Added an indication of what quality the stream is, shown as i.e: 64 kb
* Using Di.fms own JSON data to get stream addresses
* Complete rewrite of the codebase, making it more modular and generally awesomer
* Changed the highlight color of new channels from orange to blue, as the "currently playing" channel is orange in the default skin for Eden
* Changed default refresh rate from 360 (6 hours) to 720 hours (12 hours)
- Not scraping the the HTML any more using regexs to scavenge for streams

Thanks to DexN for making me aware of the JSON data and for being my willing guinea pig ;)


27. May 2012 v1.0.0
+ Initial release
+ Support for public/free streams
+ Added a testStream method to HTTPComm, to check if a url is streaming
- No premium support yet, theres some logic that I have to sort out first, regarding different stream formats (Flash/AAC/MP3)
